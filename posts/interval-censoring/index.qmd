---
title: "Estimating incubation period: interval cenoring"
author: "Jong-Hoon Kim"
date: "2023-11-15"
categories: [R, incubation period, interval censoring]
image: "interval_censor.png"
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning=FALSE, message=FALSE) 
```

### Interval censoring

In the branching process model, the number of secondary infections is realized as a random number (e.g., Poission or Negative binomial).
$$\mathcal{L} = \prod_{i=1}^{n} f(t^{B}_i - t^
{A}_i)$$
, where $f$ is a probability density function which we assume follows a Gamma distribution.
```{r gamma_no_censoring}
set.seed(42)
n <- 100
shape_true <- 2.2
scale_true <- 3.3

onset_infector <- sample(20:30, size=n, replace=TRUE)
onset_infectee <- onset_infector + rgamma(n, shape=shape_true, scale=scale_true)
nll <- function(parms, x) -sum(dgamma(x, shape=parms[[1]], scale=parms[[2]], log=TRUE))
res1 = optim(par=c(1,2), fn=nll, x=onset_infectee - onset_infector, method = "Nelder-Mead",
            control = list(maxit=2e4, reltol=1e-15))
```

### Interval censoring

Now suppose that the date of infection of the infector is given only as an interval: $$\mathcal{L} = \prod_{i=1}^{n} \int_{t^{A}_{iL}}^{t^{A}_{iR}} g(\tau) f(t^{B}_i-\tau) ~\text{d}\tau$$
, where $A_L, A_R, t$ present the times for lower end and upper end of the interval for the time of onset of the infector, and the onset time of the infectee, respectively. 
```{r uniform_interval}
set.seed(42)
L <- - sample(1:5, n, replace=TRUE)
R <- - 4*L # this will lead to potentially shorter serial interval
AL <- onset_infector + L
AR <- onset_infector + R

# x
nll_interval_censor <- function(parms, AL, AR, t){
  -sum(log(dunif(AL, min=AL, max=AR)*(pgamma(t-AL, shape=parms[[1]], scale=parms[[2]]) - pgamma(t-AR, shape=parms[[1]], scale=parms[[2]]))))
}

nll_interval_censor(c(2,3), AL=AL, AR=AR, t=onset_infectee)

res2 = optim(par=c(1,2), fn=nll_interval_censor, AL=AL, AR=AR, t=onset_infectee, method = "Nelder-Mead",
            control = list(maxit=2e4, reltol=1e-15))

# integrate(function(x) dgamma(x, shape=shape_true, scale=scale_true), lower=2, upper=3)
# pgamma(3, shape=shape_true, scale=scale_true) - pgamma(2, shape=shape_true, scale=scale_true) 
x1 <- rgamma(1e3, shape=res1$par[[1]], scale=res1$par[[2]])
x2 <- rgamma(1e3, shape=res2$par[[1]], scale=res2$par[[2]])
summary(x1)
summary(x2)

df = data.frame(model=rep(c("No censoring", "Interval censoring"), each=1e3), val=c(x1,x2))

library(ggplot2)
theme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))

df |> ggplot(aes(x=val, fill=model))+
  geom_density(alpha=0.2) +
  labs(x="value", y="density")+
  theme(legend.position = "bottom", 
        legend.title = element_blank()) 

# ggsave("interval_censor.png", gg, width=3.4*2, height=2.7*2, units="in")
  
```

