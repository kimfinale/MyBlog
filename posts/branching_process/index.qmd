---
title: "Branching process model"
author: "Jong-Hoon Kim"
date: "2023-11-08"
categories: [R, branching process, final epidemic size]
image: "thumbnail.jpg"
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning=FALSE, message=FALSE) 
```

### Branching process model

In the branching process model, the number of secondary infections is realized as a random number (e.g., Poission or Negative binomial).

```{r sir_branch}
R0_mean <- 2
popsize = 1000 # population size for each iteration
nrun <- 1000 # number of iterations to compute the mean
outbreaks <- rep(NA, nrun) # to store outbreak size for each iteration
init_inf <- 1 # initially infected people

for (r in 1:nrun) {
  pop <- data.frame(id=1:popsize)
  pop$status <- "S"
  pop$status[1:init_inf] <- "I"
  nS <- sum(pop$status == "S")
  nI <- sum(pop$status == "I")
  N <- nrow(pop)
  cnt <- init_inf + 1 # infecteds are placed from the first position
  while (nI > 0 & nS > 0) {
    row <- which(pop$status == "I")
    nI <- length(row)
    for (i in 1:nI) {
      pop$status[row[i]] <- "R"
      offspring <- rpois(1, lambda=R0_mean*nS/N)
      nS = nS - offspring
      if (offspring > 0) {
        for (k in 1:offspring) {
          pop$status[cnt] <- "I" 
          cnt <- cnt + 1
        }
      }
    }
  }
  outbreaks[r] = popsize - sum(pop$status == "S")
}

hist(outbreaks) # minor and major outbreaks
mean(outbreaks[outbreaks>200])/popsize # only major outbreaks
```

### Final epidemic size

To make sure that my branching process model makes sense, let's compare the final size of an epidemic. As shown in the previous post, for the $SIR$ model in a well-mixed population, the final epidemic size, $R(\infty)$ is given as follows: $$R(\infty) = 1 âˆ’ \text{exp}\left[-R_0R(\infty)\right]$$

```{r sir_epidemic_size}
# final size of an epidemic, R
final_size <- function(R, R0){
  R - 1 + exp(-R0*R)
}
# lower bound set at a positive number to avoid R=0, which is also a solution
uniroot(final_size, interval=c(1e-3,1), R0=R0_mean)$root
```
