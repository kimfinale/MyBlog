{
  "hash": "f5a996b151eaea83601e9c73113a276a",
  "result": {
    "markdown": "---\ntitle: \"Sub-exponential growth\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-08-07\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\n\n\nStan은 통계 모형 뿐 아니라 ODE 모형을 시물레이션하고 모수를 추정하는 데에도 유용하다. 이 포스팅에서는 일별 감염자 자료가 주어졌을 경우 Stan을 이용하여 SIR 모형의 두 개의 모수 ($\\beta, \\gamma$)를 추정하는 과정을 기술하겠다. 먼저 deSolve 패키지 양식을 따라 SIR 모형을 아래와 같이 구현하고 모형에서 예측되는 일별 감염자 자료 (dayinc) 를 평균으로 하는 거짓 관찰값을 만든다 (yobs).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsir <- function(t, state, parameters) {\n  with(as.list(c(state, parameters)),{\n    # rate of change\n    N <- S + I + R\n    dS <- - beta*S*I/N \n    dI <- + beta*S*I/N - gamma*I\n    dR <- + gamma*I\n    dCI <- + beta*S*I/N \n    \n    # return the rate of change\n    list(c(dS, dI, dR, dCI))\n  }) # end with(as.list ...\n}\n\ny0 <- c(S=999, I=1, R=0, CI=0)\nparms <- c(beta=0.6, gamma=0.4)\ntimes <- seq(0, 40, by = 1)\n\nlibrary(dplyr)\ndeSolve::ode(y=y0, times=times, func=sir, parms=parms) %>% \n  as.data.frame() -> out\n\ndayinc <- diff(out$CI)\nset.seed(42)\nyobs <- rpois(length(dayinc), lambda=dayinc)\n\ndf <- data.frame(time=1:length(dayinc), \n                 model=dayinc,\n                 obs=yobs)\nlibrary(ggplot2)\n# the ggplot theme was adopted from the following website: https://mpopov.com/tutorials/ode-stan-r/\n\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\nggplot(df)+ \n  geom_line(aes(time, model, color=\"Model\"), linetype=\"dashed\")+\n  geom_point(aes(time, model, color=\"Model\"))+\n  geom_line(aes(time, obs, color=\"Observation\"), linetype=\"dashed\")+\n  geom_point(aes(time, obs, color=\"Observation\"))+\n  labs(x=\"Time (day)\", y=\"Daily incidence\", title=\"Incidence from the SIR model\")+\n  scale_color_manual(\"\", values=c(\"Model\"=\"black\",\"Observation\"=\"firebrick\"))+\n  theme(legend.position=\"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n아래와 같이 Stan 모형을 만든다.  Posterior predictive check 을 하기 위해 generated quantities 블록에 ypred 변수를 넣었다. \n\n::: {.cell}\n\n```{.r .cell-code}\nstan_code <- \"functions {\n  vector sir(real t,        // time\n             vector y,      // state\n             vector theta  // parameters\n             ) {      \n    vector[4] dydt;\n        \n    real S = y[1];\n    real I = y[2];\n    real R = y[3];\n    real N = S + I + R;\n    \n    real beta = theta[1];\n    real gamma = theta[2];\n    \n    dydt[1] = - beta * S * I / N;\n    dydt[2] = beta * S * I / N - gamma * I;\n    dydt[3] = gamma * I;\n    dydt[4] = beta * S * I / N;\n    \n    return dydt;\n  }\n}\n\ndata {\n  int<lower=1> T;\n  real t0;\n  array[T] real ts; \n  vector[4] y0;\n  int y_obs[T];\n}\n\nparameters {\n  vector<lower=0>[2] theta; // [beta, gamma]\n}\n\nmodel {\n  array[T] vector[4] mu = ode_rk45(sir, y0, t0, ts, theta);\n  real dayinc[T]; // daily incidence\n  dayinc[1] = mu[1, 4] + 1e-12;\n  for (t in 2:T){\n    dayinc[t] = mu[t, 4] - mu[t-1, 4] + 1e-12; \n  }\n  theta ~ exponential(1); // both parameters are on the positive real line\n  y_obs ~ poisson(dayinc); // likelihood\n}\n\ngenerated quantities {\n  array[T] vector[4] mu = ode_rk45(sir, y0, t0, ts, theta);\n  real dayinc[T];\n  dayinc[1] = mu[1, 4] + 1e-12;\n  for (t in 2:T){\n    dayinc[t] = mu[t,4] - mu[t-1,4] + 1e-12;\n  }\n  int ypred[T]; // posterior predictive \n  for (t in 1:T) {\n    ypred[t] = poisson_rng(dayinc[t]);\n  }\n}\n\"\n```\n:::\n\n\n아래와 같이 Stan 모형을 이용해서 샘플링을 한다.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rstan)\noptions(mc.cores = parallel::detectCores())\nrstan_options(auto_write = TRUE)\n\n# this is for the stan model in a separate file\n# mod <- stan_model(file=paste0(getwd(),\"/stan/sir_stan.stan\"),\n#                   verbose=TRUE)\nmod <- stan_model(model_code=stan_code, verbose=TRUE)\nT <- 40 # end time unit for the ODE model, also the number of data points\ndata <- list(T=T, t0=0.0, ts=1:T, y0=c(999,1,0,0), y_obs=yobs)\nsmp <- sampling(object=mod, data=data, seed=42, chains=4, iter=2000)\n# saveRDS(smp, \"outputs/stan_smp_20230801.rds\")\n```\n:::\n\n\n모수의 posterior 분포를 살펴보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# smp <- readRDS(\"outputs/stan_smp_20230801.rds\")\nsmp <- readRDS(\"stan_smp_20230801.rds\") # file is under the content/post/the_relevant_post_name/index_files/figure_html\ndf <- as.data.frame(smp)\npr <- c(0.5,0.025,0.975)\nd <- as.data.frame(t(apply(df[,grepl(\"^theta.*\", names(df))],\n                           2, quantile, probs=pr)))\nd$name <- c(\"beta\", \"gamma\")\nd$true <- c(0.6, 0.4)\nggplot(d)+ \n  geom_errorbar(aes(x=name, ymin=`2.5%`, ymax=`97.5%`), width=0.0)+\n  geom_point(aes(x=name, y=`50%`, color=\"Estimates\"), size=2)+\n  geom_point(aes(x=name, y=true, col=\"True value\"), size=3)+\n  scale_color_manual(values=c(\"Estimates\"=\"black\",\"True value\"=\"firebrick\"))+\n  labs(x=\"\", y=\"\", title=\"Median estimates with 95% CrI\")+\n  theme(legend.position=\"bottom\", legend.title=element_blank())+\n  scale_x_discrete(breaks=c(\"beta\",\"gamma\"),\n                   labels=c(expression(beta),expression(gamma)))+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n마지막으로 posterior predictive check을 통해서 모수 추정을 위해 사용했던 자료와 비교해 보자.\n\n::: {.cell}\n\n```{.r .cell-code}\n# pr <- c(0.5,0.025,0.975)\nd <- as.data.frame(t(df[,grepl(\"^ypred.*\", names(df))]))\nd$time <- 1:40\ndlong <- tidyr::pivot_longer(d, cols=-time)\ndayincdf <- data.frame(inc=dayinc, time=1:40)\nyobsdf <- data.frame(obs=yobs, time=1:40)\n\nggplot(dlong)+ \n  geom_line(aes(time, value, group=name, color=\"Posterior predictive\"))+\n  geom_line(data=dayincdf, aes(time, inc, color=\"Model\"))+\n  geom_point(data=yobsdf, aes(time, obs, color=\"Observation\"))+\n  geom_line(data=yobsdf, aes(time, obs, color=\"Observation\"), linetype=\"dashed\")+\n  labs(x=\"Time (day)\", y=\"Daily incidence\", title=\"Posterior predictive check\")+\n  scale_color_manual(\"\", values=c(\"Model\"=\"black\",\"Posterior predictive\"=\"grey\",\"Observation\"=\"firebrick\"))+\n  theme(legend.position=\"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}