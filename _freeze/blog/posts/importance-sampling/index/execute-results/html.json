{
  "hash": "5e8261f96757b9f1d9d714847979abeb",
  "result": {
    "markdown": "---\ntitle: \"Importance sampling\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-08-30\"\ncategories: [importance sampling]\nimage: \"importance_sampling.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Importance sampling\n\n[Importance sampling](https://en.wikipedia.org/wiki/Importance_sampling) is a Monte Carlo method for evaluating properties of a particular distribution, while only having samples generated from a different distribution than the distribution of interest.\n\nSuppose we want to compute the expectation of an arbitrary function $f$ of a random variable $Y$, which is distributed according to the distribution $p$: $$ E_p[f(Y)] := \\int f(y) p(y) dy$$\n\nIn case the integration becomes difficult, we can use a Monte Carlo method. $$ E^{MC} := \\frac{1}{N} \\sum_{i=1}^N f(y^{(i)})$$ By the law of large numbers, this estimate will almost surely converge to the true value as the number $N$ of particles (i.e., sampled values) increases.\n\nAlthough this appears straightforward, sampling from the target distribution, $p$ is not always possible or efficient. Importance sampling bypasses this difficulty by sampling particles from an arbitrary \"instrumental distribution\" $q$ and weighting the particles by accounting for they were sampled from $q$ but not from $p$.\n\nImportance sampling fundamental identity\n\n$$ E_p[f(Y)] := \\int \\frac{f(y)}{q(y)} q(y) p(y) dy = E_q[w(Y) f(Y)]$$ where we define the importance weight $w(y) = \\frac{p(y)}{q(y)}$\n\nLet's see an example in which we create Gamma-distributed sample from the exponentially distributed sample.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nr <- 0.01 # low rate for a wide coverage\nx <- rexp(1e4, rate=r)\n# dgamma(x, shape=3, rate=1) target distribution\nwt = dgamma(x, shape=3, rate=1) / dexp(x, rate=r)\n\nplot(x, wt)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nW = wt/sum(wt)\n\nids <- sample(1:length(x), prob=W, replace=T)\nnewx <- x[ids]\nd <- data.frame(wt=wt, x=x, W=W)\nd <- d[order(x),]\ny = rgamma(length(x), shape=3, rate=1)\n\nd <- data.frame(mean_exp=mean(x),\n                sum_wt_x=sum(W*x),\n                mean_important=mean(newx),\n                true_mean = mean(y))\n\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  mean_exp sum_wt_x mean_important true_mean\n1 100.6511  3.01221       3.046269  3.035831\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(name=rep(c(\"Target dist\",\"Intrumental dist\",\"Importance sample\"), each=1e4), \n                 value=c(y,x,newx))\nlibrary(ggplot2)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\nextrafont::loadfonts()\nggplot(df)+\n  geom_histogram(aes(x=value))+\n  facet_wrap(~name, nrow=1, scales=\"free_x\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(\"importance_sampling.png\", gg, units=\"in\", width=3.4*2, height=2.7*2)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}