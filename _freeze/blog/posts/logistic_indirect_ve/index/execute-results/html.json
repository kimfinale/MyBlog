{
  "hash": "f84e96756d677d2a76a5e1db5b56dcfc",
  "result": {
    "markdown": "---\ntitle: \"Logistic function in R\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2024-04-19\"\ncategories: [Logistic function, indirect vaccine effectiveness, oral cholera vaccine]\nimage: \"ali2005_table1_ive.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Logistic function\n\nThe [logistic function](https://en.wikipedia.org/wiki/Logistic_function), represented as:\n$$\nf(x) = \\frac{L}{1+e^{-k(x-x_0)}}\n$$ \n, where $x_{0}, L$, and $k$ represent tht value of the function's midpoint, \nthe supremum of the values of the function, and the logistic growth rate or \nsteepness of the curve.  For values of $x$ in the domain of real numbers from \n$-\\infty$ to $+\\infty$, the S-shaped curve approaching  $L$ as $x$ approaches \n$+\\infty$ and approaching zero as $x$ approaches $-\\infty$.\n\nThis function was originally devised as a model of [population growth](https://en.wikipedia.org/wiki/Logistic_function) and is a versatile \ntool used in various fields, including epidemiology. In epidemiological \ncontexts, it serves as a mathematical model to describe \nthe growth or decline of infectious diseases within a population over time. See this [study](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7444956/), for example,\nin which the logistic equation was used to decribe the growth of COVID-19 in a\npopulation. \n\nThe standard logistic function, where  $x_{0}=0, L=1, k=1$, is sometimes called \nsigmoid or expit.\n\nIn the logistic function, the initial stage of growth is approximately \nexponential (geometric); then, as saturation begins, the growth slows to linear (arithmetic), and at maturity, growth stops. This function may be also used to\ndescribe other phenomena and [was recently used](https://journals.plos.org/plosmedicine/article?id=10.1371/journal.pmed.1003003) to model the shape of indirect vaccine efficacy (IVE) in response to the\nvaccine coverage levels. We are going to explore the use of the logistic function\nto model the IVE.\n\n### Indirect effect effectiveness\n\n[Indirect vaccine effectiveness (IVE)](https://www.jonghoonk.com/posts/vaccine_effectiveness/) is a crucial metric in assessing the impact of vaccination on both vaccinated and unvaccinated individuals within a population. It refers to the protection unvaccinated individuals receive due to the presence of vaccinated individuals in the community.\n\nTo delve into the dynamics of IVE, we examine data from clinical trials of oral cholera vaccine conducted in Bangladesh and India. These studies provide insights into how varying levels of vaccination coverage affect the incidence rates among unvaccinated individuals residing in the same cluster.\n\nIn particular, we use the IVE analyzed based on clinical trials of oral cholera \nvaccines in [Bangladesh](https://pubmed.ncbi.nlm.nih.gov/15993232/) and in [India](https://pubmed.ncbi.nlm.nih.gov/23362293/). In Table 1 below, we analyze the relationship between \"Level of vaccine coverage\" and the incidence rates among placebo recipients. The presence of IVE is evident as the risk of illness among placebo recipients diminishes with increasing vaccine coverage levels.\n\n![Table 1](ali2005_table1_ive.png)\n\n::: {.cell}\n\n```{.r .cell-code}\nvc_cut <- c(0, 28, 35, 40, 50, 65)\nvc_matlab <- vc_cut[1:5] + diff(vc_cut)/2\n# the data coming from the first year of vaccination\nve_first_year <- 0.65\neff_vc_matlab <- ve_first_year * vc_matlab \nir <- c(7.01, 5.87, 4.72, 4.65, 1.47)\n# lowest vaccine coverage group has no indirect effect\nive_matlab <- (ir[1]-ir)/ir[1]*100\n# Ali (2013) Kolkata, India\n# Data from 3-year follow-up. Total protective efficacy remained high (66%)\n# therefore, effective vaccine coverage still calculated as we did for\n# Matlab, Bangladesh data\n# Out of 107,347 eligible residents, 66,990 received 2 doses\nvc_cut <- c(0, 25, 28, 31, 34, 100*66990/107347)\nvc_kolkata <- vc_cut[1:5] + diff(vc_cut)/2\nve_first_year <- 0.65 # the data coming from the first year of vaccination\neff_vc_kolkata <- ve_first_year * vc_kolkata\nir <- c(5.54, 5.64, 2.48, 2.25, 1.93)\nive_kolkata <- (ir[1]-ir)/ir[1]*100\n\nive_dat <- data.frame(eff_vacc_cov = c(eff_vc_kolkata, eff_vc_matlab), \n                      indirect_vacc_eff = c(ive_kolkata, ive_matlab))\nive_dat <- ive_dat / 100\nive_dat$type <- \"data\"\nive_dat$location <- c(rep(\"Kolkata\", length(eff_vc_kolkata)), rep(\"Matlab\",length(eff_vc_matlab)))\n```\n:::\n\n\nHere, we assumed that the incidence rate among in the unvaccinated population,\n(i.e., no one was vaccinated) would be the same as the incidence rate \nobserved in the lowest level of vaccine coverage rate, which would be\n14% for Matlab and 12.5% for Kolkata. Because of this assumption, we may be\nunderestimating the IVE. While it may be possible to reduce effective vaccine \ncoverage rates by taking the difference between the effective vaccine \ncoverage rates presented here and the lowest vaccine coverage rates \n(i.e., 14% or 12.5%), I wanted to be rather conservative than overestimating \nthe impact.\n\nNow we develop the logistic equation and fit the equation to the data.\nSince we know that the IVE has to be between $0$ and $1$, we set $L$ at 1. \n\n::: {.cell}\n\n```{.r .cell-code}\nfm <- indirect_vacc_eff ~ 1 / (1 + exp(-k*(eff_vacc_cov-x0)))\nfit <- nls(formula=fm, data=ive_dat, start=list(k=12, x0=0.27))\npredict_logis <- function(x) {\n  1 / (1 + exp(-coef(fit)[1]*(x-coef(fit)[2])))\n}\nnewx <- seq(0,1,by=0.01)\nnewy <- predict_logis(newx)\nd <- rbind(ive_dat, data.frame(eff_vacc_cov=newx, \n                               indirect_vacc_eff=newy,\n                               type=\"Model1\", location=NA))\n```\n:::\n\n\nR has a self-starting logistic function, which can be helpful in case `nls` \nfunction is not successful for finding the parameter values with the given\nstaring values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_SSlogis <- nls(indirect_vacc_eff ~ SSlogis(eff_vacc_cov, Asym, xmid, scal), \n                   ive_dat)\nAsym <- coef(fit_SSlogis)[\"Asym\"]\nxmid <- coef(fit_SSlogis)[\"xmid\"]\nscal <- coef(fit_SSlogis)[\"scal\"]\n## SSlogis has a different convention for the terms\npred_SSlogis <- function(x){\n  Asym / (1 + exp((xmid - x)/scal))\n}\nnewx <- seq(0,1,by=0.01)\nnewy <- pred_SSlogis(newx)\nd <- rbind(d, data.frame(eff_vacc_cov=newx, \n                               indirect_vacc_eff=newy,\n                               type=\"SSmodel\", location=NA))\n```\n:::\n\n\nFinally, we can force the logistic function to converge to 1 when the effective vaccine coverage reaches 1 and to 0 when the effective \nvaccine coverage is 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- data.frame(x=ive_dat$eff_vacc_cov, y=ive_dat$indirect_vacc_eff)\n# fm <- indirect_vacc_eff ~ 1 / (1 + exp(-k*(eff_vacc_cov-x0)))\nfm2 <- y ~ 1 / (1+((1-x)*x0/(x*(1-x0)))^k)\nfit2 <- nls(formula=fm2, data=dat, start=list(k=1, x0=0.1))\npredict_logis2 <- function(x) {\n  k <- coef(fit2)[[\"k\"]]\n  x0 <- coef(fit2)[[\"x0\"]]\n  1 / (1+((1-x)*x0/(x*(1-x0)))^k)\n}\n\nnewx <- seq(0,1,by=0.01)\nnewy <- predict_logis2(newx)\nd <- rbind(d, data.frame(eff_vacc_cov=newx, \n                               indirect_vacc_eff=newy,\n                               type=\"Model2\", location=NA))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nextrafont::loadfonts(\"win\", quiet=TRUE)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\nggplot() +\n  geom_point(data=subset(d, type==\"data\"),\n  aes(eff_vacc_cov, indirect_vacc_eff, color=location))+\n  geom_line(data=subset(d, type==\"Model1\"), \n            aes(eff_vacc_cov, indirect_vacc_eff), color=\"steelblue\") +\n  geom_line(data=subset(d, type==\"Model2\"), \n            aes(eff_vacc_cov, indirect_vacc_eff), color=\"firebrick\") +\n  geom_line(data=subset(d, type==\"SSmodel\"), \n            aes(eff_vacc_cov, indirect_vacc_eff), color=\"forestgreen\")+\n  labs(y=\"Indirect vaccine efficacy\", x=\"Effective vaccine coverage\", color=\"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n # ggsave(\"ive_vacc_cov.png\")\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}