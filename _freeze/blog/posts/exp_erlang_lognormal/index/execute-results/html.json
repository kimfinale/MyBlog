{
  "hash": "f7ba8ad9185d5e68e5a622e9144a3771",
  "result": {
    "markdown": "---\ntitle: \"Implementing incubation period of cholera in the ODE model\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2024-2-22\"\ncategories: [incubation period, ODE, cholera, exponential, Erlang]\nimage: \"lnorm_exp_erlang.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Modeling incubation period in the ODE model\n\nIn the realm of infectious disease modeling, accurately simulating the incubation period--the time between exposure to a pathogen and the onset of symptoms--is crucial for understanding and predicting the spread of diseases. Classic ordinary differential equation (ODE) models often employ the exponential distribution to represent this incubation period mostly for the sake of convenience. However, the exponential distribution is not an optimal distribution to model the waiting time for the incubation period, which is often modeled as a log-normal distribution as shown in the [study by Lessler *et al*.](https://pubmed.ncbi.nlm.nih.gov/19393959/). In this post, I show that waiting time may be modeled more realistically by adding an extra compartment (e.g., $SE_1E_2IR$ rather than $SEIR$) and thus making the waiting time Erlang-distributed.\n\nIn particular, in the following R codes, I explored the incubation period of cholera from the [study by Azman *et al*.](https://www.sciencedirect.com/science/article/abs/pii/S0163445312003477#:~:text=We%20estimate%20the%20median%20incubation,CI%2C%201.3%E2%80%931.6). Azman writes: We estimate the median incubation period of toxigenic cholera to be 1.4 days (95% Credible Interval (CI), 1.3-1.6) with a dispersion of 1.98 (95% CI 1.87-2.11). Five percent of cholera cases will develop symptoms by 0.5 days (95% CI 0.4-0.5), and 95% by 4.4 days (95% CI 3.9-5.0) after infection.\n\nBased on the description, I set the parameters for the log-normal distribution as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\na = 1.40 # median\nb = 1.98 # disperson\nround(qlnorm(c(0.05,0.95), meanlog = log(a), sdlog = log(b)), digits=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5 4.3\n```\n:::\n:::\n\n\nThere is a slight mismatch for the 95th percentile (4.3 vs 4.4 \\[reported\\]). This is, however, possible considering that the estimates are from Bayesian posterior samples and I can't account for the correlation between the parameter estimates.\n\nUsing this log-normal distribution, I generate samples ($n=1000$), to which exponential and Erlang distributions are fit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat = rlnorm(1e3, meanlog = log(a), sdlog = log(b))\n\nfit_exp = fitdistrplus::fitdist(dat, distr=\"exp\")\nfit_gam = fitdistrplus::fitdist(dat, distr=\"gamma\")\n\nround(qexp(c(0.05, 0.95), rate=fit_exp$estimate[[1]]), digits=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1 5.3\n```\n:::\n\n```{.r .cell-code}\nround(qgamma(c(0.05, 0.95), shape=fit_gam$estimate[[1]], rate=fit_gam$estimate[[2]]), digits=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4 4.0\n```\n:::\n:::\n\n\nBy examining $5^{th}$ and $95^{th}$ percentiles, we realize that the best-fit exponential distribution is too wide compared with the log-normal distribution whereas the Gamma distribution looks better.\n\nHowever, in the context of ODE models, Gamma distribution is not easy to implement except for a subset in which the shape parameter is an integer (i.e., Erlang distribution). Therefore, I fit the rate parameter of the Gamma distribution while the shape parameter is set to an integer. Based on the previous fitting results (shape parameter = 2.348677), I only test the cases where the shape parameter is 2 or 3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nerlang_nll = function(p, shp=3){\n  - sum(dgamma(dat, shape=shp, rate=p, log=TRUE))\n}\ner_shp2 = optimize(erlang_nll, c(1e-6,10), shp=2)\ner_shp3 = optimize(erlang_nll, c(1e-6,10), shp=3)\n```\n:::\n\n\nConsidering the negative log likelihood values, we realize that the Gamma distribution with shape of 2 provides a better fit than the one with shape of 3.\n\nWe plot the results as a visual summary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn = 1000 # the number of\nx = seq(0, 12, length.out=n)\ndf = data.frame(\n  val = rep(x, 4),\n  dist = rep(c(\"Log-normal\", \"Exponential\", \"Gamma\", \"Erlang (shape=2)\"), \n             each=n), \n  density = \n    c(dlnorm(x, meanlog=log(1.4), sdlog=log(1.98)), \n      dexp(x, rate=fit_exp$estimate[[1]]), \n      dgamma(x, shape=fit_gam$estimate[[1]], \n                 rate=fit_gam$estimate[[2]]), \n      dgamma(x, shape=2, rate=er_shp2$minimum)))\n\nlibrary(ggplot2)\nextrafont::loadfonts(\"win\", quiet=TRUE)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\nggplot(df)+\n  geom_line(aes(x=val, y=density, color=dist))+\n  labs(y=\"Density\", x=\"\", color=\"\")+\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe above figure clearly shows that the Erlang distribution has a better representation of reality (in this case, the log-normal distributed incubation period) than the commonly used exponential distribution.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}