{
  "hash": "4327a78f09a076c49f82e07335a50b92",
  "result": {
    "markdown": "---\ntitle: \"Negative binomial regression with censored data: POLYMOD data\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-11-02\"\ncategories: [R, regression, contact, censor]\nimage: \"POLYMOD_Table1.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\nThis post describes my attempt to reproduce Table 1 of the paper, [Social Contacts and Mixing Patterns Relevant to the Spread of Infectious Diseases](https://journals.plos.org/plosmedicine/article?id=10.1371/journal.pmed.0050074). Data were downloaded from [Social Contact Data](http://www.socialcontactdata.org/), which was hosted in [zenodo](https://zenodo.org/record/3746312#.Xo85CcgzZPY). I used the version 1.1. In summary, I wasn't successful at reproducing the table exactly but still wanted to document the processes that I went through.\n\n### Data preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(dplyr)\nd1 <- fread(\"2008_Mossong_POLYMOD_participant_common.csv\")\n# d1 <- fread(\"data/2008_Mossong_POLYMOD_participant_common.csv\")\nd2 <- fread(\"2008_Mossong_POLYMOD_contact_common.csv\")\n# d2 <- fread(\"data/2008_Mossong_POLYMOD_contact_common.csv\")\n# count the number of contacts for each participant using part_id variable\nd2 |> group_by(part_id) |>\n  summarize(contacts = n()) -> d2_contacts\nd12 <- left_join(d1, d2_contacts, by=\"part_id\")\n# add household information\nd3 <- fread(\"2008_Mossong_POLYMOD_hh_common.csv\")\n# d3 <- fread(\"data/2008_Mossong_POLYMOD_hh_common.csv\")\nd123 <- left_join(d12, d3, by=\"hh_id\")\n# add day of week information\nd4 <- fread(\"2008_Mossong_POLYMOD_sday.csv\")\n# d4 <- fread(\"data/2008_Mossong_POLYMOD_sday.csv\")\ndat <- left_join(d123, d4, by=\"part_id\")\n```\n:::\n\n\n### Data manipulation\n\nCategorize the age group into different 10 age groups: 0-4, 5-9, 10-14, 15-19, and 20 to 70 by 10 years and 70 and above\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_grp_label <- c(\"0-4\",\"5-9\",\"10-14\",\"15-19\",\"20-29\",\n                   \"30-39\",\"40-49\",\"50-59\",\"60-69\",\"70+\")\n\ndat$age_grp <- ifelse(is.na(dat$part_age), \"Missing\", \n                      ifelse(dat$part_age < 20,\n                             age_grp_label[floor(dat$part_age/5) + 1], \n                             ifelse(dat$part_age < 80,\n                                    age_grp_label[floor(dat$part_age/10) + 3],\n                                    age_grp_label[10])))\n```\n:::\n\n\nCompare the number of participants by age group (the third column of Table 1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat |> group_by(age_grp) |> summarize(npart=n()) -> npart_ag\n# hard-coded using the values in Table 1.\nnpart_ag$true <- c(660,661,713,685,879,815,908,906,728,270,65) \nnpart_ag\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 Ã— 3\n   age_grp npart  true\n   <chr>   <int> <dbl>\n 1 0-4       660   660\n 2 10-14     713   661\n 3 15-19     685   713\n 4 20-29     879   685\n 5 30-39     815   879\n 6 40-49     908   815\n 7 5-9       661   908\n 8 50-59     906   906\n 9 60-69     728   728\n10 70+       270   270\n11 Missing    65    65\n```\n:::\n:::\n\n\nCategorize the household size\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclassify_household <- function(d){\n  d$hh_size_grp <- \"Missing\"\n  d$hh_size_grp <- ifelse(d$hh_size > 5, \"6+\", as.character(d$hh_size))\n  return(d)\n}\ndat <- classify_household(dat)\n```\n:::\n\n\nClassify gender\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclassify_gender <- function(d) {\n  d$gender <- \"Missing\"\n  d$gender <- ifelse(d$part_gender == \"M\", \"M\", \n                     ifelse(d$part_gender == \"F\", \"F\", d$gender))\n  \n  return(d)\n}\n\ndat <- classify_gender(dat)\n```\n:::\n\n\nClassify day of week\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndayofweek_label <- c(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\n                     \"Friday\",\"Saturday\")\n\nclassify_dayofweek <- function(d) {\n  d$dayofweek_f <- \"Missing\"\n  for (i in 1:nrow(d)) {\n    day = d$dayofweek[i]\n    if (!is.na(day)) {\n      d$dayofweek_f[i] <- dayofweek_label[day+1]\n    }\n  }\n  return(d)\n}\ndat <- classify_dayofweek(dat)\n# change names for conveninence\ndat$dayofweek_integer <- dat$dayofweek\ndat$dayofweek <- dat$dayofweek_f\n```\n:::\n\n\nMake categorical variables factor for regression Set reference groups `relevel(x, ref=ref)` as in Table 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set the categorical variables as factor for regression\ndat$age_grp <- factor(dat$age_grp, levels=c(age_grp_label,\"Missing\"))\ndat$age_grp <- relevel(dat$age_grp, ref=\"0-4\")\ndat$gender <- factor(dat$gender, levels=c(\"F\",\"M\",\"Missing\"))\ndat$gender <- relevel(dat$gender, ref = \"F\")\ndat$dayofweek <- factor(dat$dayofweek, levels=c(dayofweek_label,\"Missing\"))\ndat$dayofweek <- relevel(dat$dayofweek, ref = \"Sunday\")\ndat$hh_size_grp <- as.factor(dat$hh_size_grp)\ndat$hh_size_grp <- relevel(dat$hh_size_grp, ref=\"1\")\ndat$country <- factor(dat$country, levels=c(\"BE\",\"DE\",\"FI\",\"GB\",\"IT\",\"LU\",\"NL\",\"PL\"))\ndat$country <- relevel(dat$country, ref=\"BE\")\n\n# fwrite(dat, \"POLYMOD_2017.csv\")\n```\n:::\n\n\nAssign weights to individual participants based on the supplementary Table 2. My approach was to identify a row and a column for the relevant weight based on the age and household size. Weight of an age group for the sample was calculated by dividing the proportion of the age group in the population (in the census) with the proportion of the age group in the sample.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind_age_row_column <- function(d) {\n  d$age_row <- NA\n  for (i in 1:nrow(d)) {\n    ag <- d$part_age[i]\n    if(!is.na(ag)){\n      for (j in 1:14) {\n        if (ag >= (j-1)*5 & ag < (j-1)*5+5) {\n          d$age_row[i] <- j\n          break\n        }\n        else if (ag >= 70) {\n          d$age_row[i] <- 15\n          break\n        }\n        else{}\n      }\n    }\n  }\n  \n  d$hh_col <- NA\n  for (i in 1:nrow(d)) {\n    hs <- d$hh_size[i]\n    if(!is.na(hs)){\n      for (j in 1:4) {\n        if (hs == j) {\n          d$hh_col[i] <- j\n          break\n        }\n        else if (hs > 4) {\n          d$hh_col[i] <- 5\n        }\n        else{}\n      }\n    }\n  }\n  return(d)\n}\n\ndat <- find_age_row_column(dat)\n# wlist <- rio::import_list(\"data/sampling_weight.xlsx\")\nwlist <- rio::import_list(\"sampling_weight.xlsx\")\n\nclassify_weight <- function(d){\n  d$wt <- NA\n  cnames <- names(wlist)\n  for (i in 1:length(cnames)) {\n    wtable <- wlist[[i]]\n    w1 <- wtable[wtable$`Household size` == \"Ratio C/S\",] # sampling weight\n    W <- w1[!is.na(w1$`Household size`),] # remove the first row\n    # View(W)\n    for (j in 1:nrow(d)){\n      if(d$country[j] == cnames[i]) {\n        d$wt[j] <- W[d$age_row[j], d$hh_col[j]+2]\n      }\n    }\n  }\n  return(d)\n}\n\n# grep(\"-\", as.character(d$wt), value = T)\n# hist(as.numeric(d$wt))\ndat <- classify_weight(dat)\ndat$wt <- as.numeric(dat$wt)\n```\n:::\n\n\n### Data for fitting only complete cases\n\nThere are missing values for contacts (\\$n\\$=36) and weight (\\$n\\$=65). It is not clear how those observations were treated in the model. This may be a reason why I can't reproduce the results in Table 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_ <- dat\n## would imputation for the 36 observations make a difference?\n# dat$contacts_ori <- dat$contacts\n# dat$contacts <- ifelse(is.na(dat$contacts), round(mean(dat$contacts, na.rm=T)), dat$contacts)\n\nmodel_var <- c(\"contacts\", \"age_grp\", \"gender\", \"dayofweek\", \"hh_size_grp\", \"country\", \"wt\")\ndat <- dat[,..model_var]\n# dat <- dat[complete.cases(dat),]\ndat <- dat[!is.na(contacts),]\n```\n:::\n\n\n### NegBin regression: no censoring and no weighting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\nm <- glm.nb(contacts ~ age_grp + gender + dayofweek + hh_size_grp + country, \n            data = dat)\n# summary(m4)\nexp(m$coefficients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)         age_grp5-9       age_grp10-14       age_grp15-19 \n         5.6764958          1.4022341          1.6768688          1.6824225 \n      age_grp20-29       age_grp30-39       age_grp40-49       age_grp50-59 \n         1.4458386          1.4168460          1.3868642          1.2940456 \n      age_grp60-69         age_grp70+     age_grpMissing            genderM \n         1.0520198          0.8120547          1.0338752          0.9941243 \n     genderMissing    dayofweekMonday   dayofweekTuesday dayofweekWednesday \n         1.3434436          1.3179053          1.3998594          1.3876252 \n dayofweekThursday    dayofweekFriday  dayofweekSaturday   dayofweekMissing \n         1.3858679          1.4403113          1.1542837          1.2179674 \n      hh_size_grp2       hh_size_grp3       hh_size_grp4       hh_size_grp5 \n         1.0990550          1.1255471          1.2592436          1.3360603 \n     hh_size_grp6+          countryDE          countryFI          countryGB \n         1.4601697          0.7036079          0.9483997          0.9797998 \n         countryIT          countryLU          countryNL          countryPL \n         1.6351704          1.4081732          1.2493105          1.3223343 \n```\n:::\n:::\n\n\nRegression that account for censored number of contacts. The paper reads: *The data were right censored at 29 contacts for all countries because of a limited number of possible diary entries in some countries*\n\n$$\n\\text{log }L = \\sum_{i=1}^n w_i\\left(\\delta_i~\\text{log} \\left(P\\left(Y=y_i|X\\right)\\right) + \\left(1-\\delta_i\\right)~\\text{log} \\left(1-\\sum_{i=1}^{28}P(Y=y_i|X)\\right)\n\\right) \n$$ , where\n\n$$\n\\begin{equation}\n  \\delta_i=\\begin{cases}\n    1, & \\text{if$~y_i<29$}.\\\\\n    0, & \\text{otherwise}.\n  \\end{cases}\n\\end{equation}\n$$\n\n### Take censoring into account\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX = model.matrix(m)\n# X <- model.matrix(~ age_grp + gender + dayofweek + hh_size_grp + country, data=dat)\n\n# ini = c(coef(m1), log_theta = log(summary(m1)$theta))\ninit = c(coef(m), size=summary(m)$theta)\n\nnegll_censor <- function(par, y, X, ul=400) {\n  # parameters\n  size = par[length(par)]\n  beta = par[-length(par)]\n  # create indicator depending on chosen limit\n  indicator = y < ul\n  # linear predictor\n  mu = exp(X %*% beta)\n  # log likelihood\n  ll = sum(indicator * dnbinom(y, mu=mu, size=size, log=T) +\n             (1-indicator) * log(1-pnbinom(ul, mu=mu, size=size)), na.rm=T)\n  return(-ll)\n}\n\n# you can check if two methods (glm.nb vs. optim) match by setting ul high (e.g., 100)\nfit1 <- optim(par=init,\n            negll_censor,\n            y = dat$contacts,\n            X = X,\n            ul = 29,\n            method = \"Nelder-Mead\",\n            control = list(maxit=1e3, reltol=1e-10))\nexp(fit1$par)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)         age_grp5-9       age_grp10-14       age_grp15-19 \n         5.6047431          1.4335817          1.7328973          1.7131792 \n      age_grp20-29       age_grp30-39       age_grp40-49       age_grp50-59 \n         1.4411616          1.4214491          1.3811132          1.2825334 \n      age_grp60-69         age_grp70+     age_grpMissing            genderM \n         1.0518372          0.8182114          1.0369387          0.9825757 \n     genderMissing    dayofweekMonday   dayofweekTuesday dayofweekWednesday \n         1.3945323          1.3504467          1.4340414          1.4146111 \n dayofweekThursday    dayofweekFriday  dayofweekSaturday   dayofweekMissing \n         1.4265521          1.4638406          1.1583928          1.2481137 \n      hh_size_grp2       hh_size_grp3       hh_size_grp4       hh_size_grp5 \n         1.0879976          1.1266973          1.2623833          1.3638927 \n     hh_size_grp6+          countryDE          countryFI          countryGB \n         1.4878961          0.6934848          0.9561751          1.0065923 \n         countryIT          countryLU          countryNL          countryPL \n         1.6915581          1.3931403          1.2521232          1.3348934 \n              size \n        18.9737736 \n```\n:::\n:::\n\n\n### Take censoring & weighting into account\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX = model.matrix(m)\n# X <- model.matrix(~ age_grp + gender + dayofweek + hh_size_grp + country, data=dat) # full matrix\n# ini = c(coef(m1), log_theta = log(summary(m1)$theta))\ninit = c(coef(m), size=summary(m)$theta)\n\nnegll_censor_weight <- function(par, y, X, wt, ul=400) {\n  # parameters\n  size = par[length(par)]\n  beta = par[-length(par)]\n  # create indicator depending on chosen limit\n  indicator = y < ul\n  # linear predictor\n  mu = exp(X %*% beta)\n  # log likelihood\n  ll = sum(wt*(indicator * dnbinom(y, mu=mu, size=size, log=T)\n  + (1-indicator) * log(1-pnbinom(ul, mu=mu, size=size))), na.rm=T)\n\n  return(-ll)\n}\n\nfit2 <- optim(par=init,\n            negll_censor_weight,\n            y = dat$contacts,\n            X = X,\n            wt = dat$wt,\n            ul = 29,\n            method = \"Nelder-Mead\",\n            control = list(maxit=1e3, reltol=1e-10))\n\nexp(fit2$par)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)         age_grp5-9       age_grp10-14       age_grp15-19 \n         5.6120605          1.4242420          1.7386774          1.7031201 \n      age_grp20-29       age_grp30-39       age_grp40-49       age_grp50-59 \n         1.4590198          1.4488638          1.3920936          1.3145593 \n      age_grp60-69         age_grp70+     age_grpMissing            genderM \n         1.0690678          0.8092529          0.9944973          0.9919151 \n     genderMissing    dayofweekMonday   dayofweekTuesday dayofweekWednesday \n         1.0153858          1.3261171          1.3904167          1.3853431 \n dayofweekThursday    dayofweekFriday  dayofweekSaturday   dayofweekMissing \n         1.4001935          1.4212925          1.1905515          1.2452143 \n      hh_size_grp2       hh_size_grp3       hh_size_grp4       hh_size_grp5 \n         1.1014090          1.1254771          1.2788309          1.3717150 \n     hh_size_grp6+          countryDE          countryFI          countryGB \n         1.4784786          0.6889027          0.9561525          0.9925714 \n         countryIT          countryLU          countryNL          countryPL \n         1.6631404          1.4198698          1.3256452          1.3635879 \n              size \n        17.7725195 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nda <- data.frame(\n  parm=c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-29\", \"30-39\", \"40-49\", \n\"50-59\", \"60-69\", \"70+\", \"Missing\", \n\"F\",\"M\",\"Missing\",\n\"1\", \"2\", \"3\", \"4\", \"5\", \"6+\",\n\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \n\"Saturday\", \"Missing\",\n\"BE\", \"DE\", \"FI\", \"GB\", \"IT\", \"LU\", \"NL\", \"PL\"),\nest = c(1.00, 1.42, 1.73, 1.68, 1.45, 1.45, 1.38, 1.31, 1.06, 0.81,0.91, \n        1.00, 0.99, 1.57, \n        1.00, 1.17, 1.20, 1.36, 1.46, 1.56,\n        1.00, 1.33, 1.39, 1.38, 1.41, 1.43, 1.20, 1.24,\n        1.00, 0.70, 0.94, 0.99, 1.66, 1.42, 1.34, 1.37))\n\nda$myest = round(c(1.00, exp(fit2$par)[2:11], \n             1.00, exp(fit2$par)[12:13],\n             1.00, exp(fit2$par)[21:25],\n             1.00, exp(fit2$par)[14:20],\n             1.00, exp(fit2$par)[26:32]), digits=2)\nda\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        parm  est myest\n1        0-4 1.00  1.00\n2        5-9 1.42  1.42\n3      10-14 1.73  1.74\n4      15-19 1.68  1.70\n5      20-29 1.45  1.46\n6      30-39 1.45  1.45\n7      40-49 1.38  1.39\n8      50-59 1.31  1.31\n9      60-69 1.06  1.07\n10       70+ 0.81  0.81\n11   Missing 0.91  0.99\n12         F 1.00  1.00\n13         M 0.99  0.99\n14   Missing 1.57  1.02\n15         1 1.00  1.00\n16         2 1.17  1.10\n17         3 1.20  1.13\n18         4 1.36  1.28\n19         5 1.46  1.37\n20        6+ 1.56  1.48\n21    Sunday 1.00  1.00\n22    Monday 1.33  1.33\n23   Tuesday 1.39  1.39\n24 Wednesday 1.38  1.39\n25  Thursday 1.41  1.40\n26    Friday 1.43  1.42\n27  Saturday 1.20  1.19\n28   Missing 1.24  1.25\n29        BE 1.00  1.00\n30        DE 0.70  0.69\n31        FI 0.94  0.96\n32        GB 0.99  0.99\n33        IT 1.66  1.66\n34        LU 1.42  1.42\n35        NL 1.34  1.33\n36        PL 1.37  1.36\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}