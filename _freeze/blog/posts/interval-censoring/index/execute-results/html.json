{
  "hash": "84e63e835efa1984a6a48c0423a73a17",
  "result": {
    "markdown": "---\ntitle: \"Estimating serial interval: interval cenoring\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-11-15\"\ncategories: [R, serial interval,interval censoring, MLE]\nimage: \"interval_censor.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Vanilla maximum likelihood estimation\n\nSuppose dates of onsets of infectors, $t^{A}$, and infectees, $t^{B}$, are given as specific dates. Then the likelihood function for the serial interval may be written down as follows:\\\n$$\\mathcal{L} = \\prod_{i=1}^{n} f(t^{B}_i - t^\n{A}_i)$$ , where $f$ is a probability density function for the serial interval, which we assume follows a Gamma distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nn <- 100\nshape_true <- 2.2\nscale_true <- 3.3\n\nonset_infector <- sample(20:30, size=n, replace=TRUE)\nonset_infectee <- onset_infector + rgamma(n, shape=shape_true, scale=scale_true)\nnll <- function(parms, x) -sum(dgamma(x, shape=parms[[1]], scale=parms[[2]], log=TRUE))\nres1 = optim(par=c(1,2), fn=nll, x=onset_infectee - onset_infector, method = \"Nelder-Mead\",\n            control = list(maxit=2e4, reltol=1e-15))\n```\n:::\n\n\n### MLE with interval censoring\n\nNow suppose that the dates of onset of the infectors are given as intervals. In this case, the above likelihood function may be modified as follows:\n\n$$\\mathcal{L} = \\prod_{i=1}^{n} \\int_{t^{A}_{Li}}^{t^{A}_{Ri}} g(\\tau) f(t^{B}_i-\\tau) ~\\text{d}\\tau$$ , where $t^A_L, t^A_R, t^B$ present the times for lower end and upper end of the interval for the time of onset of the infector, and the onset time of the infectee, respectively. $g(x)$ represents the probability density function for the time of symptom onset of the infector, which we assume follows a uniform distribution.\n\nThis is a simplified version of doubly interval-censored data analysis, which was discussed by [Reich *et al* 2009](https://onlinelibrary.wiley.com/doi/abs/10.1002/sim.3659). The same concept has recently been applied to estimation of serial interval of CVODI-19 by [Nishiura *et al*. 2020](https://www.ijidonline.com/article/S1201-9712(20)30119-3/fulltext#supplementaryMaterial). I will cover the doubly interval-censored data in a future post.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nL <- - sample(1:5, n, replace=TRUE)\nR <- - 4*L # this will lead to potentially shorter serial interval\nAL <- onset_infector + L\nAR <- onset_infector + R\n\n# x\nnll_interval_censor <- function(parms, AL, AR, t){\n  -sum(log(dunif(AL, min=AL, max=AR)*(pgamma(t-AL, shape=parms[[1]], scale=parms[[2]]) - pgamma(t-AR, shape=parms[[1]], scale=parms[[2]]))))\n}\n\nres2 = optim(par=c(1,2), fn=nll_interval_censor, AL=AL, AR=AR, t=onset_infectee, method = \"Nelder-Mead\",\n            control = list(maxit=2e4, reltol=1e-15))\n\nx1 <- rgamma(1e3, shape=res1$par[[1]], scale=res1$par[[2]])\nx2 <- rgamma(1e3, shape=res2$par[[1]], scale=res2$par[[2]])\nsummary(x1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1677  3.7743  6.2386  7.3706 10.0134 36.0535 \n```\n:::\n\n```{.r .cell-code}\nsummary(x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n 0.05973  2.01266  3.88932  4.85497  6.77875 20.17723 \n```\n:::\n\n```{.r .cell-code}\ndf = data.frame(model=rep(c(\"No censoring\", \"Interval censoring\"), each=1e3), val=c(x1,x2))\n\nlibrary(ggplot2)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\ndf |> ggplot(aes(x=val, fill=model))+\n  geom_density(alpha=0.2) +\n  labs(x=\"value\", y=\"density\")+\n  theme(legend.position = \"bottom\", \n        legend.title = element_blank()) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/uniform_interval-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}