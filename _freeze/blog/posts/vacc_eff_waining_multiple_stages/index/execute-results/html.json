{
  "hash": "ddd54612ee9ebb3a01a284818ff9e476",
  "result": {
    "markdown": "---\ntitle: \"Waning vaccine efficacy on susceptibility\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2024-04-08\"\ncategories: [Vaccine, waning, SEIR, Erlang distribution]\nimage: \"vacc_eff_obs_sim.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\nIn this article, I examined the process of modifying the disease transmission model (for instance, the $SEIR$ model) to include vaccination and the waning of vaccine-induced immunity as it might happen in a clinical trial. A straightforward method to represent this involves assuming vaccinated individuals (i.e., those in the vaccinated, $V$, compartment) possess partial immunity and subsequently transition back to the susceptible, $S$, compartment. This approach effectively simulates the diminishing effectiveness of vaccines using two parameters. I focus on determining these parameters through the analysis of existing vaccine efficacy data, utilizing the typhoid vaccine clinical trial as a case study. The adaptation of the model to account for the progressive reduction in vaccine-derived immunity across various compartments was conducted [prior post](https://www.jonghoonk.com/posts/seir_varying_number_compartments/).\n\n### Vaccine efficacy data\n\nVaccine efficacy data come from a clinical trial conducted in Malawi from 2018 through 2023, for which the detailed information is available in the [study](https://pubmed.ncbi.nlm.nih.gov/38281499/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# df <- data.frame(year=c(1,2), efficacy=c(83.4,73.0)) # Shakya (2021) Lancet Glob Health\n\n# vaccine efficacy cumulative over the four years\n# Patel (2024) Lancet\ntab2_vitt <- data.frame(group = \"Vi-TT\",\n                   age = c(\"<2yo\",\"2-4yo\",\">=5yo\",\"all_ITT\",\"all_PP\"),\n                   person_years = c(6586,15007,38907,60500,59942), \n                   typhoid_culture = c(4,5,15,24,22),\n                   IR_obs = c(60.7,33.3,38.6,39.7,36.7),\n                   VE_obs = c(70.6,79.6,79.3,78.3,80.0))\n\ntab2_mena <- data.frame(group = \"MenA\",\n                   age = c(\"<2yo\",\"2-4yo\",\">=5yo\",\"all_ITT\",\"all_PP\"),\n                   person_years = c(6773,15297,38151,60220,59662), \n                   typhoid_culture = c(14,25,71,110,109),\n                   IR_obs = c(206.7,163.4,186.1,182.7,182.7),\n                   VE_obs = NA)\n\ntab2 <- rbind(tab2_vitt, tab2_mena)\n# Check the sanity of the data\ntab2$IR_cal <- round(tab2$typhoid_culture/tab2$person_years*1e5, digits=1)\ntab2$IR_cal == tab2$IR_obs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n```\n:::\n\n```{.r .cell-code}\ntab2$VE_cal <- NA\ntab2[tab2$group == \"Vi-TT\",]$VE_cal <- \n  round(100*(1 - tab2[tab2$group == \"Vi-TT\",]$IR_cal/\n               tab2[tab2$group == \"MenA\",]$IR_cal),digits=1) \ntab2$VE_cal == tab2$VE_obs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  TRUE  TRUE  TRUE  TRUE FALSE    NA    NA    NA    NA    NA\n```\n:::\n\n```{.r .cell-code}\ntab3_vitt <- data.frame(group = \"Vi-TT\",\n                   age = \"all_ITT\",\n                   person_years = c(14058,28104,42135,56121,60500),\n                   year_since_vacc = c(1,2,3,4,4.61),\n                   typhoid_culture = c(6,12,15,23,24),\n                   IR_obs = c(42.7,42.7,35.6,41.0,39.7),\n                   VE_obs=c(83.4,80.7,80.1,77.1,78.3))\ntab3_mena <- data.frame(group = \"MenA\",\n                   age = \"all_ITT\",\n                   person_years = c(14036,28021,41983,55889,60220),\n                   year_since_vacc = c(1,2,3,4,4.61),\n                   typhoid_culture = c(36,62,75,100,110),\n                   IR_obs = c(256.5,221.3,178.6,178.9,182.7),\n                   VE_obs = NA)\ntab3 <- rbind(tab3_vitt, tab3_mena)\n# Check the sanity of the data\ntab3$IR_cal <- round(tab3$typhoid_culture/tab3$person_years*1e5, digits=1)\ntab3$VE_cal <- NA\ntab3[tab3$group == \"Vi-TT\",]$VE_cal <- \n  round(100*(1 - tab3[tab3$group == \"Vi-TT\",]$IR_cal/\n               tab3[tab3$group == \"MenA\",]$IR_cal),digits=1) \ntab3$VE_cal == tab3$VE_obs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] TRUE TRUE TRUE TRUE TRUE   NA   NA   NA   NA   NA\n```\n:::\n:::\n\n\n### Model of typhoid transmission for a clinical trial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseirv_nstg_trial <- function(u, p, t){\n  \n  S <- u[1]; E <- u[2]; I <- u[3]; R <- u[4]; C <- u[5]\n  # # vaccinated cohort\n  nstg <- p[1]\n  for (i in 1:nstg) {\n    eval(str2lang(paste0(\"V\",i,\" <- \", \"u[5+\",i,\"]\")));\n  }# vaccinated and partially protected\n \n  VS <- u[5 + nstg + 1] # vaccinated but immunity waned and fully susceptible\n  VE <- u[5 + nstg + 2] \n  VI <- u[5 + nstg + 3] \n  VR <- u[5 + nstg + 4] \n  VC <- u[5 + nstg + 5]\n  \n  pop <- S + E + I + R\n  \n  v_sum <- paste(sapply(1:nstg, function(x) paste0(\"V\",x)), collapse=\"+\")\n  eval(str2lang(paste0(\"popV <- VS+VE+VI+VR+\", v_sum)))\n  \n  epsilon <- p[2] # 1/latent period\n  gamma <- p[3] # 1/duration of infectiousness\n  beta <- p[4] # transmission rate\n  mu <- p[5] # death rate is applied and population size decreases over time\n  omega <- p[6] # 1 / duration of natural immunity\n  omega_v <- p[7] # 1 / duration of partial vaccine-derived immunity\n  ve <- p[8] # vaccine efficacy\n  # vaccinated and unvaccinated population mix randomly\n  foi <- beta*(I+VI)/(pop+popV) # force of infection\n  \n  muEI <- epsilon\n  muIR <- gamma\n  muRS <- omega\n  muVS <- nstg*omega_v\n  \n  # differential equations\n  dS <- - foi*S + muRS*R - mu*S + mu*(pop+popV)\n  dE <- foi*S - muEI*E - mu*E\n  dI <- muEI*E - muIR*I - mu*I\n  dR <- muIR*I - muRS*R - mu*R\n  dC <- muEI*E\n\n  dV1 <- - foi*(1-ve)*V1 - muVS*V1 - mu*V1\n  if (nstg >= 2) {\n    for (i in 2:nstg) {\n      eval(str2lang(paste0(\"dV\",i,\" <- - foi*(1-ve)*V\", i, \" + muVS*V\",\n                           i-1 , \" - muVS*V\", i,\" - mu*V\", i)))\n    }\n  }\n\n  eval(str2lang(paste0(\"dVS <- - foi*VS + muVS*V\", \n                       nstg, \" + muRS*VR - mu*VS\"))) \n  \n  eval(str2lang(paste0(\"dVE <- foi*((1-ve)*(\", \n                       v_sum, \")+VS) - muEI*VE - mu*VE\")))\n  \n  dVI <- muEI*VE - muIR*VI - mu*VI\n  dVR <- muIR*VI - muRS*VR - mu*VR\n  dVC <- muEI*VE\n  \n  dvstr <- paste(sapply(1:nstg, function(x) paste0(\"dV\", x)), collapse=\",\")\n  return(eval(str2lang(paste0(\"c(dS,dE,dI,dR,dC,\", \n                              dvstr, \",dVS,dVE,dVI,dVR,dVC)\"))))\n}\n```\n:::\n\n\n### Simulation of the variable-compartment $SEIRV$ model\n\nSolutions for the steady states of the $SEIR$ model. These are used to set the initial conditions as we assume that the disease transmission reached a [steady state](https://www.jonghoonk.com/posts/cholera_seir_eqn/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSs <- \"((gamma + mu) * (epsilon + mu)) / (beta * epsilon)\"\nEs <- \"- ((gamma + mu) * (mu + omega) * ((gamma + mu) * (epsilon + mu) - beta * epsilon)) / (beta * epsilon * (gamma * (epsilon + mu + omega) + (epsilon + mu) * (mu + omega)))\"\n\nIs <- \"((mu + omega) * (beta * epsilon - (gamma + mu) * (epsilon + mu))) / (beta * omega * (gamma + epsilon + mu) + beta * (gamma + mu) * (epsilon + mu))\"\nRs <- \"(beta * gamma * epsilon - gamma * (gamma + mu) * (epsilon + mu)) / (beta * omega * (gamma + epsilon + mu) + beta * (gamma + mu) * (epsilon + mu))\"\n```\n:::\n\n\nCommon parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nR0 <- 3 # basic reproduction number\nepsilon <- 1/5 # 1/epsilon = incubation period\ngamma <- 1/11.8 # 1/gamma = duration of infectiousness\nbeta <- R0*gamma # instantaneous transmission rate\nmu <- 1/(65*365) # natural death rate\nomega <- 0 # re-infection is not counted in the clinical trial\nomega_v <- 1/(4*365) # natural immunity waning rate\nve <- 0.834\nnstg <- 1 # number of stages\nN <- 1e6 # population size\nf <- 1e-4 # fraction of vaccinated population\ntend <- 10*365\n# parameters\nparams <- c(nstg=nstg, epsilon=epsilon, gamma=gamma, beta=beta, \n            mu=mu, omega=omega, omega_v=omega_v, ve=ve,\n            N=N, f=f, tend=tend)\n\n# steady states for given parameters\nstates0 <- list(S=Ss, E=Es, I=Is, R=Rs)\nsteadys0 <- sapply(states0, function(x) eval(parse(text = x)))\n```\n:::\n\n\nFunction to run the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_seirv_nstg_trial <- function(params) {\n  de <- diffeqr::diffeq_setup() # to use Julia's DifferentialEquations.jl\n  # initial distribution of the population across the states\n  nstg <- params[[\"nstg\"]]\n  N <- params[[\"N\"]]\n  f <- params[[\"f\"]]\n  V0s <- paste(sapply(1:nstg, function(x) paste0(\"V\", x,\"=0\")), collapse=\",\")\n  eval(str2lang(paste0(\"u0 <- c(steadys0*N,C=0,\", \n                       V0s, \",VS=0,VE=0,VI=0,VR=0,VC=0)\")))\n  u0[c(\"V1\",\"VE\",\"VI\",\"VR\")] <- as.numeric(steadys0*N*f/(1-f))\n  tend <- params[[\"tend\"]]\n  tspan <- c(0.0, tend)\n  \n  prob <- de$ODEProblem(seirv_nstg_trial, u0, tspan, params)\n  sol <- de$solve(prob, de$Tsit5(), saveat=1)\n  mat <- sapply(sol$u, identity)\n  udf <- as.data.frame(t(mat))\n  out <- cbind(data.frame(t=sol$t), udf)\n\n  Vn <- paste(sapply(1:nstg, function(x) paste0('\"V', x, '\"')), collapse=\",\")\n  names(out) <- eval(str2lang(paste0('c(\"t\",\"S\",\"E\",\"I\",\"R\",\"C\",', Vn, \n                                     ',\"VS\",\"VE\",\"VI\",\"VR\",\"VC\")'))) \n  return(out)\n}\n```\n:::\n\n\nDirect vaccine effectiveness in case vaccine-derived immunity does not wane over time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnstg <- params[[\"nstg\"]]\nparams[[\"omega_v\"]] <- 0\nout <- run_seirv_nstg_trial(params=params)\nnovacc <- c(\"S\",\"E\",\"I\",\"R\")\nVn <- paste(sapply(1:nstg, function(x) paste0('\"V', x, '\"')), collapse=\",\")\nvacc <- eval(str2lang(paste0('c(', Vn, ',\"VS\",\"VE\",\"VI\",\"VR\")'))) \n  \ndve <- rep(NA, nrow(out)) # direct vaccine effectiveness measured daily\nfor(i in 1:nrow(out)){\n  dve[i] <- 1 - (out[i,\"VC\"]/sum(out[i,vacc]))/(out[i,\"C\"]/sum(out[i,novacc]))\n}\nplot(1:length(dve)/365, dve, type=\"l\", ylab=\"direct VE\", xlab=\"year\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nDirect vaccine efficacy in case vaccine-derived immunity wanes over time with the average waiting time of 10 years\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnstg <- params[[\"nstg\"]]\nparams[[\"omega_v\"]] <- 1/10/365 # average waiting time = 10 years\nout <- run_seirv_nstg_trial(params=params)\nnovacc <- c(\"S\",\"E\",\"I\",\"R\")\nVn <- paste(sapply(1:nstg, function(x) paste0('\"V', x, '\"')), collapse=\",\")\nvacc <- eval(str2lang(paste0('c(', Vn, ',\"VS\",\"VE\",\"VI\",\"VR\")'))) \n  \ndve <- rep(NA, nrow(out)) # direct vaccine effectiveness measured daily\nfor(i in 1:nrow(out)){\n  dve[i] <- 1 - (out[i,\"VC\"]/sum(out[i,vacc]))/(out[i,\"C\"]/sum(out[i,novacc]))\n}\nplot(1:length(dve)/365, dve, type=\"l\", ylab=\"direct VE\", xlab=\"year\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFunction to measure vaccine effectiveness over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeasure_vacc_eff <- function(p, params, times){\n  de <- diffeqr::diffeq_setup()\n  params[[\"ve\"]] <- p[1]\n  params[[\"omega_v\"]] <- p[2]\n  nstg <- params[[\"nstg\"]]\n  \n  out <- run_seirv_nstg_trial(params)\n  novacc <- c(\"S\",\"E\",\"I\",\"R\")\n  Vn <- paste(sapply(1:nstg, function(x) paste0('\"V', x, '\"')), collapse=\",\")\n  vacc <- eval(str2lang(paste0('c(', Vn, ',\"VS\",\"VE\",\"VI\",\"VR\")'))) \n  \n  ve_sim <- rep(NA, length(times))\n  for (i in 1:length(times)) {\n    ve_sim[i] <- 1 - \n      ((out[times[i],\"VC\"])/sum(out[times[i],vacc])) / \n      ((out[times[i],\"C\"])/sum(out[times[i],novacc]))\n  }\n  return(ve_sim)\n}\n```\n:::\n\n\nDefine sum of squared difference (ssq) between the model and the data to evaluate the performance of the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# the initial VE is not measured from the model\ntimes <- round(tab3[tab3$group == \"Vi-TT\",]$year_since_vacc*365) # times to measure VE\nve_obs <- tab3[tab3$group == \"Vi-TT\",]$VE_obs/100\nssq <- function(p){\n  ve_sim <- measure_vacc_eff(p, params=params, times=times)\n  sum((ve_obs - ve_sim)^2)  \n}\n# check for some predetermined ve and omega\n# ssq(p=c(0.8,1/3650)) must be smaller than ssq(p=c(0.4,1/365))\nssq(p=c(0.8,1/3650))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.05994089\n```\n:::\n\n```{.r .cell-code}\nssq(p=c(0.4,1/3650))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.005789\n```\n:::\n:::\n\n\nEstimate parameters by minimizing the ssq using the `nlminb` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparams[[\"nstg\"]] <- 1\nfit1 <- nlminb(c(0.9, 1/(10*365)), objective=ssq, \n              lower=c(0.1,1/(1000*365)),\n              upper=c(0.99,0.99))\nfit1$par[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8589978\n```\n:::\n\n```{.r .cell-code}\n1/fit1$par[2]/365\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22.14073\n```\n:::\n\n```{.r .cell-code}\nfit1$objective\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0003437906\n```\n:::\n\n```{.r .cell-code}\nve_obs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.834 0.807 0.801 0.771 0.783\n```\n:::\n\n```{.r .cell-code}\n(ve_sim <- round(measure_vacc_eff(p=fit1$par, params=params, times=times), digits=3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.828 0.815 0.799 0.782 0.772\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparams[[\"nstg\"]] <- 2\nfit2 <- nlminb(c(0.9, 1/(100*365)), objective=ssq, \n              lower=c(0.1,1/(100000*365)),\n              upper=c(0.99,0.99))\nfit2$par[1]\n1/fit2$par[2]/365\nfit2$objective\nve_obs\nround(measure_vacc_eff(p=fit2$par, params=params, times=times), digits=3)\n```\n:::\n\n\nPlot data and simulation results\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# png(\"vacc_eff_obs_sim.png\")\nplot(times/365, ve_obs, col=\"firebrick\", \n     ylim=c(0.5,1),  xlab=\"year since vaccination\", ylab=\"direct vaccine effectiveness\",\n     type=\"p\", pch=0)\nlines(times/365, ve_sim, col=\"black\")\nlegend(\"topright\", \n  legend=c(\"Data\", \"Model\"), \n  col=c(\"firebrick\", \"black\"), \n  lty= c(0,1),\n  pch=c(0,NA),\n  bty = \"n\", \n  cex = 1.0, \n  text.col = \"black\", \n  horiz = F , \n  inset = c(0.02,0.02))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# dev.off()\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}