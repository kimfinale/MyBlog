{
  "hash": "0337e355e3e34a7c81d6603492ad6c1f",
  "result": {
    "markdown": "---\ntitle: \"Modeling the waning of the vaccine-derived immunity in the ODE model\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2024-2-27\"\ncategories: [vaccine-derived immunity, waning, cholera, ODE, exponential, Gamma]\nimage: \"vacc_wane_exp_erlang.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n## Modeling the waning of the vaccine-derived immunity in the ODE model\n\nThe use of ordinary differential equation (ODE) models to simulate disease spread and evaluate vaccine impact is growing. Waning of vaccine-derived immunity often follows an exponential distribution in these models. However, as with the case with incubation period [incubation period](https://pubmed.ncbi.nlm.nih.gov/19393959/) that we examined in the [previous post](https://www.jonghoonk.com/posts/exp_erlang_lognormal/), exponential distribution may not accurately depict the waning of vaccine-derived immunity.\n\nIn this post, I explore how to model the waning of vaccine efficacy over time using an ODE framework, utilizing the data from a [study by Lee *et al*.](https://www.thelancet.com/journals/langlo/article/PIIS2214-109X(20)30310-7/fulltext) Specifically, I examine how various cumulative distributions can be applied to acurately represent the diminishing percentage of of the vaccine protection over time, through the use of R code examples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data from Table S4, Lee et al. (2020) Lancet Glob Health\ndat = data.frame(month = rep(seq(0,60,by=6),4),\n                 age = c(rep(\"Adult\", 11*2), rep(\"Kid\", 11*2)),\n                 type = rep(\"data\", 11*4),\n                 regimen = rep(c(rep(\"two doses\", 11), rep(\"one dose\", 11)),2),\n                 val = c(c(76,72,68,63,58,52,46,39,32,24,15)/100,\n                 c(76,72,68,0,0,0,0,0,0,0,0)/100,\n                 c(36,34,32,30,27,24,22,18,15,11,7)/100,\n                 c(36,34,32,0,0,0,0,0,0,0,0)/100))\n\nlibrary(dplyr)\n\nds = vector(\"list\", 4)\nds[[1]] = filter(dat, age==\"Adult\", type==\"data\", regimen==\"two doses\")\nds[[2]] = filter(dat, age==\"Kid\", type==\"data\", regimen==\"two doses\")\nds[[3]] = filter(dat, age==\"Adult\", type==\"data\", regimen==\"one dose\")\nds[[4]] = filter(dat, age==\"Kid\", type==\"data\", regimen==\"one dose\")\n\nfits_gamma_shape_2 <- list()\n\nfor (i in 1:4) {\n fits_gamma_shape_2[[i]] <- nls(val ~ \n        val[1]*pgamma(month, shape=2, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n\nfits_gamma_shape_3 <- list()\n\nfor (i in 1:4) {\n fits_gamma_shape_3[[i]] <- nls(val ~ \n        val[1]*pgamma(month, shape=3, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n\nfits_gamma_shape_4 <- list()\n\nfor (i in 1:4) {\n fits_gamma_shape_4[[i]] <- nls(val ~ \n        val[1]*pgamma(month, shape=4, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n\nfits_gamma_shape_5 <- list()\n\nfor (i in 1:4) {\n fits_gamma_shape_5[[i]] <- nls(val ~ \n        val[1]*pgamma(month, shape=5, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n\nfits_gamma_shape_8 <- list()\n\nfor (i in 1:4) {\n fits_gamma_shape_8[[i]] <- nls(val ~ \n        val[1]*pgamma(month, shape=8, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n\nfits_exp <- list()\n\nfor (i in 1:4) {\n fits_exp[[i]] <- nls(val ~ \n        val[1]*pexp(month, rate=exp(lograte),\n          lower.tail=FALSE), start=list(lograte=log(0.3)), data=ds[[i]])\n}\n```\n:::\n\n\n### Gammaa with shape=2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prediction\nmonths = 0:100\nnewd = data.frame(month = months)\npred = data.frame(month = rep(months, 4),\n                 age = rep(c(rep(\"Adult\", 101), rep(\"Kid\", 101)), 2),\n                 type = rep(\"model\", 101*4),\n                 regimen = c(rep(\"two doses\", 101*2), rep(\"one dose\", 101*2)),\n                 val = c(predict(fits_gamma_shape_2[[1]], newdata = newd),\n                          predict(fits_gamma_shape_2[[2]], newdata = newd),\n                          predict(fits_gamma_shape_2[[3]], newdata = newd),\n                          predict(fits_gamma_shape_2[[4]], newdata = newd)))\n                 \nlibrary(ggplot2)\nextrafont::loadfonts(\"win\", quiet=TRUE)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\nggplot(dat) +\n  geom_point(aes(month, val, color=regimen))+\n  geom_line(data=pred, aes(month, val, color=regimen)) +\n  facet_wrap(~age) +\n  ggtitle(\"Gamma decay with shape=2\") +\n  labs(y=\"Vaccine efficacy\", x=\"Months\", color=\"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Gammaa with shape=3\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prediction\nmonths = 0:100\nnewd = data.frame(month = months)\npred = data.frame(month = rep(months, 4),\n                 age = rep(c(rep(\"Adult\", 101), rep(\"Kid\", 101)), 2),\n                 type = rep(\"model\", 101*4),\n                 regimen = c(rep(\"two doses\", 101*2), rep(\"one dose\", 101*2)),\n                 val = c(predict(fits_gamma_shape_3[[1]], newdata = newd),\n                          predict(fits_gamma_shape_3[[2]], newdata = newd),\n                          predict(fits_gamma_shape_3[[3]], newdata = newd),\n                          predict(fits_gamma_shape_3[[4]], newdata = newd)))\n                 \nggplot(dat) +\n  geom_point(aes(month, val, color=regimen))+\n  geom_line(data=pred, aes(month, val, color=regimen)) +\n  facet_wrap(~age) +\n  ggtitle(\"Gamma decay with shape=3\") +\n  labs(y=\"Vaccine efficacy\", x=\"Months\", color=\"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Exponential decay\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prediction\nmonths = 0:100\nnewd = data.frame(month = months)\npred = data.frame(month = rep(months, 4),\n                 age = rep(c(rep(\"Adult\", 101), rep(\"Kid\", 101)), 2),\n                 type = rep(\"model\", 101*4),\n                 regimen = c(rep(\"two doses\", 101*2), rep(\"one dose\", 101*2)),\n                 val = c(predict(fits_exp[[1]], newdata = newd),\n                          predict(fits_exp[[2]], newdata = newd),\n                          predict(fits_exp[[3]], newdata = newd),\n                          predict(fits_exp[[4]], newdata = newd)))\n                 \nggplot(dat) +\n  geom_point(aes(month, val, color=regimen))+\n  geom_line(data=pred, aes(month, val, color=regimen)) +\n  facet_wrap(~age)+\n  ggtitle(\"Exponential decay\") +\n  labs(y=\"Vaccine efficacy\", x=\"Months\", color=\"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nGiven that the data for adults following a two-dose regimen seem to be the most reliable, we evaluated the model's residual errors in comparison to this data. The analysis of residual errors indicates that a gamma distribution with a shape parameter of 3 presents the optimal fit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fits_exp[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: val ~ val[1] * pexp(month, rate = exp(lograte), lower.tail = FALSE)\n\nParameters:\n        Estimate Std. Error t value Pr(>|t|)    \nlograte -4.09710    0.09047  -45.29 6.63e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0643 on 10 degrees of freedom\n\nNumber of iterations to convergence: 6 \nAchieved convergence tolerance: 6.629e-06\n```\n:::\n\n```{.r .cell-code}\nsummary(fits_gamma_shape_2[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: val ~ val[1] * pgamma(month, shape = 2, rate = exp(lograte), \n    lower.tail = FALSE)\n\nParameters:\n        Estimate Std. Error t value Pr(>|t|)    \nlograte -3.18619    0.02946  -108.2   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03005 on 10 degrees of freedom\n\nNumber of iterations to convergence: 5 \nAchieved convergence tolerance: 6.246e-06\n```\n:::\n\n```{.r .cell-code}\nsummary(fits_gamma_shape_3[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: val ~ val[1] * pgamma(month, shape = 3, rate = exp(lograte), \n    lower.tail = FALSE)\n\nParameters:\n        Estimate Std. Error t value Pr(>|t|)    \nlograte -2.72304    0.02375  -114.7   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.02893 on 10 degrees of freedom\n\nNumber of iterations to convergence: 4 \nAchieved convergence tolerance: 1.595e-06\n```\n:::\n\n```{.r .cell-code}\nsummary(fits_gamma_shape_4[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: val ~ val[1] * pgamma(month, shape = 4, rate = exp(lograte), \n    lower.tail = FALSE)\n\nParameters:\n        Estimate Std. Error t value Pr(>|t|)    \nlograte -2.41214    0.02884  -83.64 1.46e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0394 on 10 degrees of freedom\n\nNumber of iterations to convergence: 6 \nAchieved convergence tolerance: 7.874e-07\n```\n:::\n\n```{.r .cell-code}\nsummary(fits_gamma_shape_5[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: val ~ val[1] * pgamma(month, shape = 5, rate = exp(lograte), \n    lower.tail = FALSE)\n\nParameters:\n        Estimate Std. Error t value Pr(>|t|)    \nlograte -2.17801    0.03374  -64.56 1.94e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05009 on 10 degrees of freedom\n\nNumber of iterations to convergence: 6 \nAchieved convergence tolerance: 9.615e-06\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# prediction\nmonths = 0:100\nnewd = data.frame(month = months)\npred = data.frame(month = rep(months, 4),\n                 age = rep(\"Adult\", 101*4),\n                 type = c(rep(\"Exponential\", 101),\n                          rep(\"Gamma w/ shape=2\", 101),\n                          rep(\"Gamma w/ shape=3\", 101),\n                          rep(\"Gamma w/ shape=4\", 101)),\n                 regimen = rep(\"two doses\", 101*4),\n                 val = c(predict(fits_exp[[1]], newdata = newd),\n                          predict(fits_gamma_shape_2[[1]], newdata = newd),\n                          predict(fits_gamma_shape_3[[1]], newdata = newd),\n                          predict(fits_gamma_shape_4[[1]], newdata = newd)))\n\nggplot() +\n  geom_point(data=filter(dat, age==\"Adult\", regimen==\"two doses\"), \n             aes(month, val, color=\"data\"), shape=19, size=3, alpha=0.3)+\n  geom_line(data=pred, aes(month, val, color=type)) +\n  ggtitle(\"Two-dose vaccine efficacy for adults\") +\n  labs(y=\"Vaccine efficacy\", x=\"Months\", color=\"\")+\n  scale_colour_manual(\n    values=c(\"data\" = \"black\",  \"Exponential\" = \"firebrick\",\n             \"Gamma w/ shape=2\" = \"green4\",\"Gamma w/ shape=3\" = \"#6A3D9A\",\n              \"Gamma w/ shape=4\" = \"#FF7F00\"),\n    guide=guide_legend(override.aes = list(\n      linetype=c(\"data\"=\"blank\",\"Exponential\" = \"solid\",\n                          \"Gamma w/ shape=2\" = \"solid\",\n                          \"Gamma w/ shape=3\" = \"solid\",\n                          \"Gamma w/ shape=4\" = \"solid\"),\n      shape=c('data'=19,\"Exponential\" = NA,\n                          \"Gamma w/ shape=2\" = NA,\n                          \"Gamma w/ shape=3\" = NA,\n                          \"Gamma w/ shape=4\" = NA))))+ \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}