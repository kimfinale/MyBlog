{
  "hash": "ae6d52f84af8ee5c8181d614da83794f",
  "result": {
    "markdown": "---\ntitle: \"Final epidemic size: uniroot vs. optimize\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-11-10\"\ncategories: [epidemic, size, R, uniroot, optimize]\nimage: \"epidemicsize_R.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Final size of an epidemic\n\n[Miller 2012](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3506030/) shows that the final size of an epidmic for a well-mixed population can be derived in the following way. We divide the population into susceptible, infected, and recovered fractions: $S(t), I(t), and R(t)$ respectively. Assuming a large population, constant transmission and recovery rates, and mass action mixing, we have\n\n$$\\dot{S}= -\\beta IS, ~\\dot{I}=\\beta IS -\\gamma I, ~\\dot{R}=\\gamma I$$ We can remove $\\dot{R}$ since $S+I+R=1$. From the equation, we can have the following relationship.\n\n$$\\frac{dS}{dI}= -1 + \\frac{\\gamma}{\\beta S}$$ Solving this equation gives the following: $$ I(t) = -S(t) + \\frac{\\gamma}{\\beta} \\text{ln} S(t) + C$$\n\nWe can find $C=1$ using the initial conditions ($I\\rightarrow 0, S\\rightarrow 0$). Then, using $I(\\infty)=0$ gives the following relationship\n\n$$S(\\infty) = 1 − \\text{exp}\\left[-R_0\\left(1-S(\\infty)\\right)\\right]$$ Using the $R(\\infty)=1-S(\\infty)$, we can get the following equation for the final size of an epidemic, $R(\\infty)$:\n\n$$R(\\infty) = 1 − \\text{exp}\\left[-R_0R(\\infty)\\right]$$ Let's use the above relationship to compute the final epidemic size nuerically\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_size <- function(R, R0){\n  R - 1 + exp(-R0*R)\n}\n# lower bound set at 0.1 to avoid R=0, which is also a solution\nuniroot(final_size, interval=c(0.1,1), R0=2)$root\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.796811\n```\n:::\n\n```{.r .cell-code}\ndf <- data.frame(R0vec = c(1.1, seq(1.2, 4, by=0.1))) # as  \ndf$sizevec = sapply(df$R0vec, function(x) uniroot(final_size, interval=c(0.1,1), R0=x)$root)\n\nlibrary(ggplot2)\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\nggplot(df, aes(R0vec, sizevec)) +\n  geom_line(linetype=\"dashed\")+\n  geom_point()+\n  labs(x=parse(text=\"R[0]\"), y=\"Final epidemic size\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(\"epidemicsize_R.png\", p, units=\"in\", width=3.4, height=2.7)\n```\n:::\n\n\nInstead of `uniroot`, `optimize` function can be used to find the solution for the above equation. However, `optimize` gives the correct answer when the function was squared.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptimize(final_size, interval=c(0.1,1), R0=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$minimum\n[1] 0.3465758\n\n$objective\n[1] -0.1534264\n```\n:::\n\n```{.r .cell-code}\nfinal_size_sq <- function(R, R0){\n  (R - 1 + exp(-R0*R))^2\n}\noptimize(final_size_sq, interval=c(0.1,1), R0=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$minimum\n[1] 0.7968155\n\n$objective\n[1] 3.933157e-12\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}