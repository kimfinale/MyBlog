{
  "hash": "40711be4a6dd9cfdd867502bd87e3f16",
  "result": {
    "markdown": "---\ntitle: \"Regression using optim\"\nauthor: \"Jong-Hoon Kim\"\ndate: \"2023-10-11\"\ncategories: [R, optim, regression]\nimage: \"plot_car.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n### Data\n\nI will use the `cars` data with give the speed of cars and the distances taken to stop.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- datasets::cars\nm <- lm(dist ~ speed, data=d)\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = dist ~ speed, data = d)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nspeed         3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,\tAdjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n```\n:::\n:::\n\n\n### Plot\n\nPlot estimates with confidence and prediction intervals\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred <- predict(m, interval=\"prediction\", level=0.95) # prediction interval\nconf <- predict(m, interval=\"confidence\", level=0.95) # confidence interval\n\nmdat <- m$model\nmdat$pred_estimate <- pred[,1]\nmdat$pred_lb <- pred[,2]\nmdat$pred_ub <- pred[,3]\nmdat$conf_estimate <- conf[,1]\nmdat$conf_lb <- conf[,2]\nmdat$conf_ub <- conf[,3]\n\nmdat$residuals <- residuals(m)\nlibrary(ggplot2)\nlibrary(dplyr)\n\ntheme_set(hrbrthemes::theme_ipsum_rc(base_size=14, subtitle_size=16, axis_title_size=12))\n\npltcar <- mdat %>% \n  ggplot(aes(speed, dist))+\n  # geom_point(aes(size = abs(m$residuals)))+\n  geom_point(aes(color=\"Data\"), size = 1)+\n  geom_line(aes(y=pred_estimate, color=\"Model\"))+\n  geom_ribbon(aes(ymax=pred_ub, ymin=pred_lb, fill=\"Model\"), alpha=0.2)+\n  # geom_line(aes(y=conf_estimate), color=\"steelblue\")+\n  geom_ribbon(aes(ymax=conf_ub, ymin=conf_lb, fill=\"Model\"), alpha=0.5)+\n  scale_color_manual(\"\", values=c(\"Data\"=\"firebrick\"))+\n  scale_fill_manual(\"\", values=c(\"Model\"=\"steelblue\"))+\n  labs(x=\"Speed\", y=\"Distance\", title=\"Speed and Stopping Distances of Cars\")+\n  theme(legend.position=\"bottom\")\n\n# ggsave(\"plot_car.png\", pltcar)\n\npltcar\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### optim function\n\nNow let's take an alternative approach to write down the likelihood function and maximize it using the `optim` function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# define our likelihood function we like to optimize\nnegloglik <- function(par, y, X){\n  sigma <- par[1]\n  beta <- par[-length(par)]\n  mu <- X %*% beta \n  - sum(dnorm(y, mean=mu, sd=sigma, log=TRUE), na.rm=T)\n}\n\nX = model.matrix(m)\ninit = c(coef(m), sigma=summary(m)$sigma)\n# check\n# negloglik(par=init, y=d$y, X=X)\nfit <- optim(par=init, \n             fn=negloglik, \n             y=d$dist, \n             X=X, \n             control=list(reltol=1e-6))\n```\n:::\n\n\nLet's compare the results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit$par\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)       speed       sigma \n -17.579095    3.932409   15.379587 \n```\n:::\n\n```{.r .cell-code}\ncoef(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)       speed \n -17.579095    3.932409 \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}